if(isRelease){
    apply plugin: 'com.android.library' // -> aar
}else {
    apply plugin: 'com.android.application' // -> apk
}

android {
    compileSdkVersion app_android.compileSdkVersion
    buildToolsVersion app_android.buildToolsVersion

    defaultConfig {
        if(!isRelease){
            applicationId app_id.personal
        }
        minSdkVersion app_android.minSdkVersion
        targetSdkVersion app_android.targetSdkVersion
        versionCode app_android.versionCode
        versionName app_android.versionName

        testInstrumentationRunner app_android.testInstrumentationRunner
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [ AROUTER_MODULE_NAME  : project.getName() ]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility app_android.sourceCompatibility
        targetCompatibility app_android.targetCompatibility
    }

    // 源集 ——> 用来设置Java目录或者资源目录
    sourceSets {
        main {
            if(!isRelease){
                // 如果是组件化模式，需要单独运行时
                manifest.srcFile 'src/main/debug/AndroidManifest.xml'
            }else {
                // 集成化模式，整个项目打包
                manifest.srcFile 'src/main/AndroidManifest.xml'
            }
        }
    }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    annotationProcessor app_annotationProcessors.arouter_compiler

    implementation project(":common")
    implementation project(":base-network")
}